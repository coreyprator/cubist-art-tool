# RFF: scripts/make_gallery.py
from __future__ import annotations
import sys
from pathlib import Path
from html import escape

HTML = """<!doctype html>
<html lang="en">
<head>
<meta charset="utf-8"/>
<title>{title}</title>
<meta name="viewport" content="width=device-width,initial-scale=1"/>
<style>
  :root {{ --gap: 12px; --tile: 420px; }}
  * {{ box-sizing: border-box; }}
  body {{
    margin: 0; padding: 16px;
    font-family: system-ui, -apple-system, "Segoe UI", Roboto, Helvetica, Arial, "Apple Color Emoji", "Segoe UI Emoji";
    background: #0b0c10; color: #e8e8e8;
  }}
  h1 {{ font-size: 18px; font-weight: 600; margin: 0 0 12px 0; }}
  .grid {{
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(var(--tile), 1fr));
    gap: var(--gap);
    align-items: start;
  }}
  .card {{
    background: #111217; border: 1px solid #1f2230; border-radius: 12px; padding: 10px;
    box-shadow: 0 1px 12px rgba(0,0,0,.25);
  }}
  .card .title {{ font-size: 14px; opacity: .85; margin: 0 0 6px 0; }}
  .card iframe, .card img, .card object {{
    width: 100%; height: min(70vh, 560px);
    border: 0; background: #fff; border-radius: 8px;
  }}
  footer {{ margin-top: 16px; opacity: .6; font-size: 12px; }}
</style>
</head>
<body>
  <h1>{title}</h1>
  <div class="grid">
{items}
  </div>
  <footer>Generated by make_gallery.py</footer>
</body>
</html>
"""


def is_image(p: Path) -> bool:
    return p.suffix.lower() in {".svg", ".png", ".jpg", ".jpeg", ".gif", ".webp"}


def main() -> int:
    if len(sys.argv) < 2:
        print("usage: python scripts/make_gallery.py <folder>")
        return 2
    root = Path(sys.argv[1]).resolve()
    if not root.exists():
        print(f"not found: {root}")
        return 2

    # Only list images that are actually inside <root>
    items_html = []
    for p in sorted(root.glob("*")):
        if not p.is_file() or not is_image(p):
            continue
        title = escape(p.name)
        rel = escape(p.name)  # relative to root
        if p.suffix.lower() == ".svg":
            tag = f'<object data="{rel}" type="image/svg+xml"></object>'
        else:
            tag = f'<img src="{rel}" loading="lazy"/>'
        items_html.append(
            f'    <div class="card"><div class="title">{title}</div>{tag}</div>'
        )

    out = root / "gallery.html"
    out.write_text(
        HTML.format(title=f"Gallery â€” {root.name}", items="\n".join(items_html)),
        encoding="utf-8",
    )
    print(f"[gallery] Wrote: {out}")
    return 0


if __name__ == "__main__":
    raise SystemExit(main())
